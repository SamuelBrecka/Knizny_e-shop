@page "/books"
@using Microsoft.EntityFrameworkCore
@inject PageKeep.dbcontext.AppDbContext DbContext
@rendermode InteractiveServer


<section id="books" class="books-section">
    <div class="container">

        <div class="search-bar">
            <input type="text" class="form-control search-input" @bind="searchQuery" @bind:event="oninput" placeholder="Vyhľadajte knihu..." />
            <button class="search-button" @onclick="SearchBooks">Hľadať</button>
        </div>

        <div class="book-grid">
            @if (filteredBooks == null || !filteredBooks.Any())
            {
                <p>Žiadne knihy nespĺňajú vaše kritériá.</p>
            }
            else
            {
                @foreach (var book in filteredBooks)
                {
                    <a href="/book/@book.Id" class="book">
                        <img src="@book.Image" alt="@book.Title" style="max-width: 300px; height: 440px;" />
                        <h3>@book.Title</h3>
                        <p>Autor: @book.Author</p>
                        <p>Cena: @book.Price €</p>
                    </a>
                }
            }
        </div>
    </div>
</section>

@code {
    private List<PageKeep.Models.BookModel>? books; 
    private List<PageKeep.Models.BookModel>? filteredBooks; 
    private string searchQuery = string.Empty; 

    protected override async Task OnInitializedAsync()
    {
        books = await DbContext.Books.ToListAsync(); 
        filteredBooks = books; 
    }

    private void SearchBooks()
    {
        if (string.IsNullOrEmpty(searchQuery))
        {
            filteredBooks = books;
        }
        else
        {
            filteredBooks = books?.Where(book =>
                (book.Title?.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ?? false) ||
                (book.Author?.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ?? false)
            ).ToList();
        }
    }
}

